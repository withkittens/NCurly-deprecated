name: First workflow

on:
  push:
    branches: [actions]
    tags: [v*]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: Microsoft/vcpkg
          path: vcpkg
          
      - uses: actions/cache@v1
        id: cache-vcpkg
        with:
          path: vcpkg/vcpkg.exe
          key: vcpkg-${{ hashFiles('vcpkg/toolsrc/VERSION.txt') }}
          restore-keys: |
            vcpkg-      

      - name: Bootstrap vcpkg
        if: steps.cache-vcpkg.outputs.cache-hit != 'true'
        working-directory: vcpkg
        run: ./bootstrap-vcpkg.bat
        
      - name: Install curl
        working-directory: vcpkg
        run: ./vcpkg install curl:x86-windows curl:x64-windows
        
      - name: Checkout NCurly
        uses: actions/checkout@v2
        with:
          path: NCurly
          
      - run: ls . -Recurse | Select Path | Format-List
        
      - name: Copy curl binaries
        run: >-
          @('x86', 'x64') | foreach {
            mkdir "NCurly/runtimes/win-$_/native";
            cp "vcpkg/installed/curl/$_-windows/bin/*.dll" "NCurly/runtimes/win-$_/native"
          }
        
      #- name: Export curl
      #  working-directory: '.\vcpkg'
      #  run: '.\vcpkg export curl:x86-windows curl:x64-windows --nuget'
      #  
      #- name: Prepare artifact directory
      #  run: 'md vcpkg-artifact; Move-Item -Path vcpkg\*.nupkg -Destination vcpkg-artifact\libcurl.1.0.0.nupkg'
      #  
      #- name: Upload artifact
      #  uses: actions/upload-artifact@v1
      #  with:
      #    name: 'libcurl.1.0.0.nupkg'
      #    path: '.\vcpkg-artifact'
